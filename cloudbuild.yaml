substitutions:
  _REGION: 'europe-west3'
  _BUCKET_NAME: 'grips-assistant-6692-audio'

steps:
# 1. Build the frontend Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: Build-Frontend
  args:
    - 'build'
    - '-t'
    - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/grips-repo/grips-frontend:$BUILD_ID'
    - './frontend'

# 2. Push frontend image to Artifact Registry (must precede Cloud Run deploy)
- name: 'gcr.io/cloud-builders/docker'
  id: Push-Frontend-Image
  args:
    - 'push'
    - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/grips-repo/grips-frontend:$BUILD_ID'

# 3. Deploy the frontend to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: Deploy-Frontend
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'grips-frontend'
    - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/grips-repo/grips-frontend:$BUILD_ID'
    - '--region=${_REGION}'
    - '--platform=managed'
    - '--allow-unauthenticated'
    - '--service-account=grips-backend-sa@${PROJECT_ID}.iam.gserviceaccount.com'
    - '--set-env-vars=BUCKET_NAME=${_BUCKET_NAME}'
    - '--min-instances=0'
    - '--max-instances=10'
    - '--cpu=1'
    - '--memory=512Mi'

# 4. Deploy the audio-processor Cloud Function
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: Deploy-Audio-Processor
  entrypoint: gcloud
  args:
    - 'functions'
    - 'deploy'
    - 'audio-processor'
    - '--gen2'
    - '--source=./backend/functions/audio_processor'
    - '--runtime=python39'
    - '--region=${_REGION}'
    - '--entry-point=process_audio'
    - '--trigger-event-filters=type=google.cloud.storage.object.v1.finalized'
    - '--trigger-event-filters=bucket=${_BUCKET_NAME}'
    - '--service-account=grips-backend-sa@${PROJECT_ID}.iam.gserviceaccount.com'
    - '--memory=512MB'
    - '--timeout=540s'

# 5. Deploy the nlp-engine Cloud Function
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: Deploy-NLP-Engine
  entrypoint: gcloud
  args:
    - 'functions'
    - 'deploy'
    - 'nlp-engine'
    - '--gen2'
    - '--source=./backend/functions/nlp_engine'
    - '--runtime=python39'
    - '--region=${_REGION}'
    - '--entry-point=process_transcription'
    - '--trigger-topic=transcription-complete'
    - '--service-account=grips-backend-sa@${PROJECT_ID}.iam.gserviceaccount.com'
    - '--memory=1GB'
    - '--timeout=540s'

# 6. Deploy the pw-client Cloud Function
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: Deploy-PW-Client
  entrypoint: gcloud
  args:
    - 'functions'
    - 'deploy'
    - 'pw-client'
    - '--gen2'
    - '--source=./backend/functions/pw_client'
    - '--runtime=python39'
    - '--region=${_REGION}'
    - '--entry-point=handle_pw_action'
    - '--trigger-topic=pw-actions'
    - '--service-account=grips-backend-sa@${PROJECT_ID}.iam.gserviceaccount.com'
    - '--memory=512MB'
    - '--timeout=300s'

# Deploy transcription-complete HTTP function
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: Deploy-Transcription-Complete
  entrypoint: gcloud
  args:
    - functions
    - deploy
    - transcription-complete
    - '--gen2'
    - '--runtime=python39'
    - '--region=${_REGION}'
    - '--source=./backend/functions/transcription_complete'
    - '--entry-point=transcription_complete'
    - '--trigger-http'
    - '--allow-unauthenticated'
    - '--service-account=grips-backend-sa@${PROJECT_ID}.iam.gserviceaccount.com'
    - '--memory=256MB'

# 7. Apply run.invoker Role to Agent
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  id: Allow-Eventarc-Invoke
  entrypoint: gcloud
  args:
    - run
    - services
    - add-iam-policy-binding
    - audio-processor
    - --region=${_REGION}
    - --member=serviceAccount:service-${PROJECT_NUMBER}@gcp-sa-eventarc.iam.gserviceaccount.com
    - --role=roles/run.invoker

images:
- '${_REGION}-docker.pkg.dev/${PROJECT_ID}/grips-repo/grips-frontend:$BUILD_ID'

options:
  logging: CLOUD_LOGGING_ONLY 